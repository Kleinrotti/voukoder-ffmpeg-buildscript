name: libfdkaac

on:
  workflow_call:
    inputs:
      env:
        type: string
        required: true
        default: 'windows-2022' 
        description: 'Environment'

      config:
        type: string
        required: true
        default: 'debug' 
        description: 'Configuration'

env:
  vsPath: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\
  cFlags: ${{ inputs.config == 'release' && '-MD' || '-MDd' }}

jobs:
  libfdkaac:
    runs-on: ${{ inputs.env }}
    steps:
    - name: Set up GIT
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
    - name: Checkout FDK AAC
      uses: actions/checkout@v3.0.0
      with:
        repository: mstorsjo/fdk-aac
        ref: master
        path: fdkaac
    - name: Check cache
      id: libfdkaac-cache
      uses: actions/cache@v3
      with:
        path: dist
        key: libfdkaac-${{ inputs.env }}-${{ inputs.config }}-${{ hashFiles('fdkaac') }}
    - name: Set up MSYS2
      if: steps.libfdkaac-cache.outputs.cache-hit != 'true'
      uses: msys2/setup-msys2@v2
      with:
        install: base-devel binutils autotools automake mingw-w64-x86_64-cmake nasm
        path-type: inherit
    - name: Build FDK AAC
      if: steps.libfdkaac-cache.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        call "${{ env.vsPath }}VC\Auxiliary\Build\vcvars64.bat"
        md build dist
        D:\a\_temp\setup-msys2\msys2.cmd -c 'cd fdkaac ; autoreconf -fiv ; CC=cl.exe CXX=cl.exe CXXFLAGS=${{ env.cFlags }} ./configure --prefix=$(realpath ../build) --disable-shared --disable-static ; make ; make install ; cd ../build ; tar czf ../dist/libfdkaac.tgz *'
    - name: Publish artifact
      uses: actions/upload-artifact@v2
      with:
        name: libfdkaac-${{ inputs.env }}-${{ inputs.config }}
        path: dist/libfdkaac.tgz